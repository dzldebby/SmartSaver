Day 1: Product Strategy & User Research
1.1 Create Product Requirements Document (PRD)

1.1.1 Problem Statement

Pull MAS Annual Report (2022) for deposit volume data

Calculate total unoptimized deposits: (Avg rate delta between tiers) x (total deposits)

Frame as "Singaporeans lose S$218M annually" (example calculation)

1.1.2 Success Metrics

Define 3 KPIs:

30% increase in "I understand rate structures" (post-app survey)

25% reduction in avg time to optimize deposits

40% MAU growth in 3 months

1.1.3 User Personas

Build 3 personas using deposit tier data:

Tech Darren (28): S$50k deposits, values automated solutions

Auntie Mei (62): S$150k FDs, needs trust indicators

Mr. Tan (SME): S$500k+ liquidity, wants tax-efficient structures

1.1.4 Roadmap

Phased rollout plan:

Phase 1 (Current): Basic calculator

Phase 2 (Q2): Integrate MAS rate API

Phase 3 (Q4): Predictive model using ARIMA + AWS Forecast

1.2 User Analytics Implementation

1.2.1 Instrumentation

Add Mixpanel snippet to Streamlit on_session_start

Track 5 events:

python
Copy
mixpanel.track("Salary Adjusted", {"amount": st.session_state.salary})  
mixpanel.track("Scenario Saved", {"bank": selected_bank})
1.2.2 Drop-off Analysis

Create funnel visualization:
Landing Page → Inputs Completed → Results Viewed → Shared

1.3 A/B Testing

1.3.1 Variant Implementation

Build slider vs. input box toggle:

python
Copy
if st.session_state.ui_variant == "A":  
    salary = st.slider("Monthly Salary")  
else:  
    salary = st.number_input("Enter Salary")
1.3.2 Test Setup

Randomize 50/50 split using st.experimental_user.hash

Measure: Completion rate, time per task, error rate

Day 2: Stakeholder Management & Monetization
2.1 Stakeholder Map

2.1.1 Regulatory Compliance

Document MAS Notice 755 compliance items:

Data privacy (PDPA)

Disclaimers: "Not financial advice" in red

Audit trail for calculations

2.1.2 Technical Architecture

Create architecture diagram showing:

AWS S3 → Lambda (calculations) → DynamoDB (user profiles)

Link to your AWS Solutions Architect cert in footer

2.2 Monetization Strategy

2.2.1 Pro Tier Features

Build mockup with Figma:

Lock icon on "Rate Change Scenarios"

"Export to PDF" button with your company's watermark

2.2.2 LTV:CAC Model

Use Kantar pricing framework:

Copy
LTV = (ARPU * Gross Margin) / Churn  
CAC = (Sales Team Cost) / (Conversion Rate * Leads)  
Target 3:1 ratio via bank partnership rev-share

Day 3: AI Integration & Scalability
3.1 LLM Features

3.1.1 Rate Explainer

Implement RAG pipeline:

Scrape 10 bank rate PDFs to S3

Use AWS Textract for OCR

Query with: "Explain UOB One account's 5% bonus interest"

3.1.2 Personalized Advice

Prompt engineering template:

Copy
"As a {persona} with S${amount} in {banks}, prioritize {new_bank} because..."  
3.2 Scalability Prep

3.2.1 Spark Batch Processing

Document pseudocode:

python
Copy
deposits_df = spark.read.parquet("s3://deposit-data")  
optimized = deposits_df.map(calculate_optimal)  
3.2.2 Error Handling

Port govtech patterns:

python
Copy
try:  
    calculate_rates()  
except MASRateError as e:  
    log_to_splunk(e)  
    st.warning("Please check MAS website for updates")  
Day 4: Metrics & Storytelling
4.1 Business Dashboard

4.1.1 Simulated Metrics

Calculate "S$2.1M optimized":

Copy
500 users * Avg S$4.2k deposits * 1.5% rate delta  
4.1.2 Benchmarking

Compare to CleverFranke fintech benchmarks:

Session duration: 4.2m (you) vs 2.8m (industry)

4.2 Product Case Study

4.2.1 Resume Bullets

Quantify everything:
"Reduced support tickets 40% via RAG chatbot (NPS +25)"

4.2.2 LinkedIn Post

Hook: "This CNY, I built something to return S$218M to Singaporeans"

Tags: #fintech #publicservice #PMinterview

